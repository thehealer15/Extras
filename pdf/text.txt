Contents
Prefacei
Contents2
1GettingStarted3
1.1BasicSkills................................4
1.1.1Usingxtermsandloggingintotheserver............4
1.1.2AboutthePythonShellandidle................5
1.1.3RunningPythonLocally.....................7
1.2FunwithPython.............................8
1.2.1Basicoperations.........................8
1.2.2Lists,tuplesandstrings.....................9
1.2.3Modules..............................11
1.2.4Gettinghelp............................11
1.2.5Programcontrol:Looping,conditionalsandfunctions.....12
1.3ProgressinginPython..........................16
1.3.1Writingyourownmodulesandexecutablescripts.......17
1.3.2Listcomprehension........................18
1.3.3UsingobjectsinPython.....................18
1.3.4The
Numeric
arraypackage...................20
1.3.5TheCurveobjectanditsuses..................25
1.4AdvancedPythonTopics.........................28
1.4.1yourownobjects....................28
v
1.4.2Dictionaries............................37
1.4.3Writingtextdatato.....................37
1.4.4Readingtextdatafroma..................38
2Thermodynamicsandverticalstructure39
2.1Tutorial:Gettingphysicalpropertiesandconstants..........40
2.2Problemset:Drythermodynamics...................41
2.2.1Pressure..............................41
2.2.2Idealgaslaw...........................41
2.2.3Atmosphericcompositionandmixingratios..........42
2.2.4Spheat:Somebasicproblems...............42
2.2.5Temperature-dependentspheat..............43
2.2.6PotentialTemperatureandtheDryAdiabat..........43
2.2.7Inhomogeneousmixtures;Potentialdensityand"virtualtem-
perature".............................44
2.3DataLab:Analysisoftemperatureprodata............44
2.3.1AnalysisoftropicalEarthsoundings..............44
2.3.2AnalysisofmidlatitudeEarthsoundings............46
2.3.3Analysisofplanetarysoundings.................47
2.4Tutorial:Numericalsolutionoferentialequations.........48
2.5Problemset:Hydrostatics........................52
2.5.1MassofcarbonintheEarth'satmosphere...........52
2.5.2MassofTitan'satmosphere...................52
2.5.3Thedryadiabaticlapserate...................53
2.5.4Heatcapacityofatmosphericcolumns.............53
2.6Problemset:Moistthermodynamics..................53
2.6.1Latentheat............................53
2.6.2UsingtheformoftheClausius-Clapeyronrelation.53
2.6.3MethaneonTitan.........................54
2.6.4Boilingvs.evaporation......................54
vi
1
2.6.5Comparisonofidealizedvs.empiricalsaturationvaporpressure55
2.6.6Variablelatentheat........................55
2.6.7LatentheatfromClausius-Clapeyron..............55
2.6.8Watercontentoftheatmosphere................57
2.6.9
CO
2
condensationintheMartianWinter............57
2.6.10
CO
2condensationonSnowballEarth..............57
2.6.11Moistadiabatforatmospherewithtwocondensiblecomponents58
2.6.12SpringtimeforEuropa......................58
2.7ComputationLab:Computingthemoistadiabat...........59
2.8Problemset:Rayleighfractionation...................60
3Elementaryradiationbalanceproblems61
4Continuousatmosphereradiationproblems63
5Radiative-convectivemodelproblems65
6Scatteringproblems67
7Dataanalysisproblems:Earthradiationbudget69
8Surfaceenergybudgetproblems71
9SeasonalCycleproblems73
10Atmosphericevolutionmodellingproblems75
11Meridionalheattransportmodellingproblems77
12AppendixA:HintsfortheuserofUnixanditsrelatives79
12.1SimpleUnixforthemasses........................79
12.2AfewusefulUnixutilities........................80
12.3NastyUnixIhopeyouwon'thavetodealwith..........80
12.4Publicdomainsoftwaretoinstallontheserver.............83
2
12.5Installingthecourseware.........................85
Chapter1
GettingStarted
3
4
CHAPTER1.GETTINGSTARTED
1.1BasicSkills
Todothelabsandtheproblemsets,youwillneedsomebasiccomputerskills.Iwill
outlinethesehere.Theinstructionsbelowassumethattheexerciseswillbe
doneusingwhatI'llcallthe
defaultsetup
.Inthedefaultsetup,thecoursesoftware
andthenecessarydatasetsresideonacentralizedserver;thestudentlogsonto
theserverfromaworkstationthatsupportsthesshprotocolandtheXwindowing
system.TheXwindowsystemisneededtoallowaremoteservertowritegraphics
(e.g.aplot,oragraphicaluserinterface)tothescreenofthelocalworkstation.The
speinstructionsbelowapplymostcloselytoUnixworkstations.Thenecessary
skillsforusingthedefaultsetupare:

LoggingintoaLinuxserverfromaworkstationonthenetwork.

SettingthingsupfortheLinuxmachinetodisplayitsgraphicsonthework-
stationyouaresittingat,usingtheXwindowingsystem.

WorkingwithLinuxdirectoriesand(commands
cd,ls,mv,rm,mkdir
).

StartingupthePythoninterpreterandusingthePythonIntegratedDevelop-
mentEnvironment,
idle
.
1.1.1Usingxtermsandloggingintotheserver
Thesoftwarethatyouwillbeusing,aswellasthedatayouwillbelookingat,
residesonaserverrunningtheUnixoperatingsystem.Intheexamples,wewill
supposethattheserveris
climate.myUniversity.edu
;yourownserverwillhave
atname,whichwillbeprovidedbyyourinstructor.Tousethesoftware,
youwillneedtologinto
climate
,whichyoucandofromanymachineanywherein
theworld,aslongasthemachinehasan
ssh
program.ThestepistogetanX
terminalwindow("xterm"forshort)onthescreenoftheworkstationatwhichyou
aresitting.IfyourworkstationisaUnixcomputerthestandardwindowyouget
whenyourequesta"shell"ora"terminal"windowisalreadyanxterm,assuming
thesystemhasbeenstartedupintoagraphicaluserenvironment,asisgenerally
thecasethesedays.Togetanewxterm,youjustneedtoclickontheappropriate
icononthedesktop.Thespiconvariessomewhatfromsystemtosystem,but
willgenerallylooklikeascallopshelloracomputerscreen.
MacsrunningOSXareactuallyrunningaformofUnix,butthedefaultgraph-
icalinterfacedoesnotusetheXwindowingsystem.Thiswillbelessconfusingifyou
recallthatthe"X"in"OSX"isactuallypronounced"10".Thestandardterminal,
orshell,windowyougetwiththeOSXterminaltoolis
not
anxterm.Whileyoucan
1.1.BASICSKILLS
5
issueUnixcommandsandlogontoremotesystemsfortext-basedapplicationsby
issuingthesshcommandinthiswindow,theOSXterminalwindowdoesnothandle
graphics.Further,OSXdoesnotcomewiththeXwindowingsysteminstalledby
default.Fortunately,AppoleprovidesanexcellentimplementationforXonOSX,
whichcanbeinstalledfromthesysteminstalldisk.IfyouhaveyourownOSXMac,
orhaveadministrativeprivilegesforsomeOSXMacyoucanuse,youcaninstall
X11
yourselfveryeasily.AllMacssetupforthiscourseshould,inprinciple,already
have
X11
installed.Togetanxterm,youjustclickonthe
X11
iconinthetoolbar
andwaitforXtostartup.ThedefaultwindowsXputsuponthescreenareall
xterms.Youcanmakeawindowgoawaybytyping
ctrl-d
inthewindow(meaning
holddownthe
ctrl
keyandtype
d
.Ifyouwantanewxterm,justtype
xterm&
inanyexistingxtermwindow,orchoose
terminal
fromthe
Applications
menu,
andanewonewillpopup.Yourinstructorcanshowyouhowtomoveandresize
windowsorturnthemintoicons.
Onceyouhaveanxtermonyourscreen,clickthemouseinitswindowto
activateit.Youarenowreadytologintothecourseserver.Ifyouhappentobeon
aUnixworkstationwiththecoursedataandsoftwareinstalledlocally,youcanjust
skiptheloginstep.ThisisoneofthebeautiesofXandUnix{thesystemdoesn't
reallycarewhichcomputerisactuallydoingthecalculation.Thisremarkapplies
equallytoOSXMacs,providedthatUnixversionsofthecoursesoftwarehavebeen
properlyinstalled.
Nowlet'sassumethatyouneedtologontothecourseserver.You'llneedan
accounttogofurther:auseridandapassword.Ifyoualreadyhaveanaccounton
climate
,youcanusethat.Ifnot,youcangetoneofthepre-assignedaccountsfrom
theTA.Onceyouhavethisdata,youcanlogin.Tologin,justissuethecommand
ssh-X-l<USERID>climate.myUniversity.edu
fromanxterm,where
<USERID>
istheuseridforthecourseaccount.Thengiveyourpasswordattheprompt.The
-X
optiontellstheservertoforwardgraphicalcommandstothelocalXwindowing
systemforhandling.OnmanyLinuxsystems,thisoptionisturnedonbydefault,
butitneverhurtstoincludeitexplicitly.
1.1.2AboutthePythonShellandidle
Pythonisaninterpretedlanguage,whichmeansyoujusttypeinplaintexttoan
interpreter
,andthingshappen.Thereisnocompilationstep,asinlanguagessuch
as
c
or
FORTRAN
.TostartupthePythoninterpreter,justtype
python
fromthe
commandlineon
climate
.You'llgetaprompt,andcanstarttypinginpython
commands.Trytypingin
2.5*3+5.
andseewhathappens.ToexitthePython
interpreter,type
ctrl-d
.
6
CHAPTER1.GETTINGSTARTED
Eventually,you'llprobablywanttoputyourPythonprograms,oratleastyour
functionns,inayoucreateandeditwithatexteditor,andthenloadit
intoPythonlater.Thissavesyouhavingtore-typeeverythingeverytimeyourun.
ThestandardUniximplementationofPythonprovidesan
integrateddevelopment
environment
called
idle
,whichbundlesaPythoninterpreterwindowwithaPython-
awaretexteditor.Tostartup
idle
,logintotheserverfromanxtermandtype
IDLE
.YouwillgetaPythonshellwindow,whichisanordinaryPythoninterpreter
exceptthatitallowssomelimitededitingcapabilities.Therealpowerofidlecomes
fromtheuseoftheintegratededitor.Togetaneditorwindowforanewjust
choose
NewWindow
fromthe
File
menuonthe
PythonShell
window.Ifyouwant
toworkwithanexistinginstead,justchoose
Open
fromthe
File
menu,and
picktheyouwantfromtheresultingdialogbox.Youcantypetextintothe
editorwindow,andcutandpasteinafashionthatwillprobablybefamiliartomost
computerusers.Youcanhaveasmanyeditorwindowsopenasyouwant,andcut
andpastebetweenthem.Whenyouaredonewithyourchanges,select
Save
or
Saveas
fromthe
File
menuoftheeditorwindow,andrespondtotheresulting
dialogboxasnecessary.Onceyouhavesavedayoucanrunitbyselecting
Run
module
fromtheRunmenu.
Youcanactuallyusetheintegratededitortoeditjustaboutanytext
butithasfeaturesthatmakeitespeciallyusefulforPython.Forexample,it
colorizesPythonkeywords,automaticallyindentsinasensibleway,andprovides
popupadvicewindowsthathelpyourememberhowvariousPythonfunctionsare
used.Asanexerciseatthispoint,youshouldtrycreatingandsavingashortnote
(e.g.aletterofgratitudetoyourTA),andthentryopeningitupagaininanew
editorwindow.Toexitfrom
idle
justchoose
Exit
fromthe
File
menuofany
window.
Anespeciallyusefulfeatureofthe
idle
editoristhatitallowsyoutoexecute
thePythonscriptyouareworkingonwithoutleavingthewindow.Todothis,just
choose
RunScript
fromthe
Edit
menuoftheeditorwindow.Thenthescriptwill
runinthePythonshellwindow.Whenthescriptisdonerunning,youcantype
additionalPythoncommandsintotheshellwindow,tocheckthevaluesofvarious
quantitiesandsoforth.
IDLE
hasvariousotherpowerfulfeatures,includingdebuggingsupport.You
canmanagewithoutthese,butyoushouldfeelfreetolearnaboutandexperiment
withthemasyougoalong.
OnceyouhavewrittenaworkingPythonscriptandsavedit,say,as
MyScript.py
,
youcanrunitfromthecommandlinebytyping
pythonMyScript.py
.Thereisno
needtostartup
IDLE
justtorunascript.
1.1.BASICSKILLS
7
1.1.3RunningPythonLocally
NotethatmanyofthePython-basedexercisesgivenintheproblemsetsdonotneed
thedatastoredon
climate
,orthespecialPythonextensionmoduleswrittenfor
thiscourse.Ifyouhaveacomputerofyourown,youcandownloadyourowncopy
ofPythonfromthewebsite
python.org
.ImplementationsareavailableforMacs,
LinuxandWindowsPC's.TheMacPythonimplementation,availableforbothOS9
andOSXMacsprovidesanexcellentintegrateddevelopmentenvironmentthatin
somewaysissuperiorto
IDLE
.Youcanuseyourownstand-alonemachineforany
oftheexercisesthatneedonlystraightPythonprogrammingusingthestandard
modules.Youcanalsouseyourownmachineforanyexercisesinvolvingreading
andwritingoftextdata,ifyoudownloadanyneededdatafromclimateto
yourownmachine.Also,anyPythonextensionmodulesthatarewrittenasordinary
human-readablePythonscripts(e.g.
phys.py
)canbejustdownloadedandputin
your
python
directory,regardlessofwhatkindofmachineyouareusing.However,
compiledextensionmodules,withnameslike
veclib.so
needtobecompatiblewith
yoursphardwareandPythonimplementation.
Intherestofthisworkbook,whenwesay"StartupthePythoninterpreter,"
thechoiceisuptoyouwhetheryouusethesimplecommandlineinterpreteror
idle
,
orperhapssomeotherintegratedPythondevelopmentenvironmentyoumighthave
(e.g.MacPython).Forresultsthatproducegraphics,andfortheuseof
idle
,you
mustbeconnectedtoPythoninawaythatcandisplaygraphicsonyourscreen
(e.g.viaanxterm).Youwon'tberemindedofthisexplicitlyinthetext.Exercises
thatdon'tproducegraphicscanbedoneoveranykindoflink."Writeandrun"a
scriptcouldmeanthatyouenteritusingyourfavoriteeditorandrunitfromthe
commandline,oritcouldmeanusing
idle
.
Ingeneral,Ihavetriedtoavoidreferringtoimplementation-dependentdetails
intherestofthisWorkbook.
8
CHAPTER1.GETTINGSTARTED
1.2FunwithPython
ThisisaverysimplelabdesignedtohelpyougetusedtoprogrammingwithPython.
ThroughoutthisandtherestofthePythonlabs,itisexpectedthatyouwilltryout
alltheexamplesinthePythoninterpreterwindow,andmakeupadditionalexamples
onyourownuntilyoufeelyouunderstandtheconceptbeingintroduced.Forthe
mostpart,youwon'tbebotheredwithanyfurtherremindersofthisexpectation.
First,startupthePythoninterpreter.Forthislab,youcantypeyourinput
directlyintotheinterpreter,ifyouwish.Asyoubegintodomorecomplexprograms,
however,youwillwanttowriteyourprogramsusingatexteditor,andthensave
thembeforerunning.Thisway,youwon'thavetoretypeeverythingwhenyouneed
tocorrectamistakeinjustoneortwolines,andyoucanre-runtheprogramora
moionofitveryeasily.Althoughnoneoftheexercisesinthislabarecomplex
enoughtoreallyrequirethetexteditor,youcanusethislabasanopportunityto
becomefamiliarwiththeuseofthe
idle
editor.
1.2.1Basicoperations
Onceyou'reatthePythoninterpreterprompt,trysomesimplestatementsusing
Pythonlikeacalculator,e.g.:
52.5*51.2+37.
a=7.
b=10.
a/b
a*b
a=7
b=10
a*b
a/b
2**1000
1717%3
andsoforth.Thisissonice,you'llprobablywanttoloadPythonontoyourlaptop
anduseitinplaceofapocketcalculator,especialllyonceyoulearnhowtoimportthe
standardmathfunctionsintoyourPythonworld.Theseexamplesillustratetheuse
oftingpointnumbers,multiplicationandaddition("*","+"and"/)assignment
tovariables,integers,andexponentiation"**".Theexampleillustratesthe
useofthe"mod"operator,
%
whichisabinaryoperatorappliedtointegers.The
expression
n%m
yieldsanintegerwhoseabsolutevalueislessthan
m
,whichisthe
1.2.FUNWITHPYTHON
9
resultofsubtractingthemaximumpossiblemultiplesof
m
(ifyouarefamiliar
withclockarithmetic,thisistheoperationthatturnsregulararithmeticintoclock
arithmetic
modulom
).Theassignmentstothevariables
a
and
b
illustratethat
Pythonisnota
typed
language.Youdonothavetodeclarethevariablesasbeing
ofacertaintypebeforeyouusethem.Theyarejustnames,whichareusedaslong
asnecessarytorefertosomevalue.Thisextendsnotjusttonumbers,buttoallthe
objectwhichPythoncandealwith,includingarrays,lists,functions,stringsand
manyotherentitieswhichwillbeintroducedshortly.Intheexampleabove,st
aandbares,andbehavelikesondivision.Thentheyareintegers,and
behavelikeintegers.Thelastlineillustratestheexponentiationoperator,denotedby
"**".Thelargenumberyougetasaresulthasan"L"tackedontheend,signifying
thattheresultisa
long
integer,whichcanhavearbitrarilymanydigits(untilyou
runoutofmemory).Pythonautomaticallycreatesthistypeofintegerwhenever
necessary.ThestandardPythoningpointnumberhasdoubleprecision,though
Pythonextensionsareavailablewhichallowyoutospecifyarbitraryprecisionfor
tsaswell.
Pythonalsohasingpointcomplexnumbersasanativedatatype.A
complexnumberwithrealandimaginaryparts
a
and
b
respectivelyiswrittenas
a
+
bj
.Alltheusualoperationsapply.Aftersetting
z
=7
:
5+4
:j
try
z
+1,
z

z
,
1
=z
,
z

1
:
5and
z

z
.Ifyouneedtomakeacomplexnumberoutoftworeal
variables,say
x
and
y
,theeasiestwayistousethe
complex
function,e.g.
z=
complex(x,y)
.Pythondoesnothavecomplexintegers(knownas
gaussianintegers
tomathematicians)asanativedatatype,butyouwilllearnhowtothese,
andvirtuallyanyotherspecializedtypeyouneed,inSection1.4.1
1.2.2Lists,tuplesandstrings
TuplesandlistsareamongthemostbasicandversatiledatastructuresinPython.
Listscontainanykindofdataatall,andtheelementscanbeofttypes
ats,int,strings,evenothertuplesorlists).Manyfunctionsreturntuplesorlists.
Tryoutthefollowingexamplesintheinterpreter
Heresanexampleshowingtwowaysalistandgettingatanelement:
a=[1,'two']
a[0]
a[1]
b=[]
b.append(1)
b.append('two')
b[0]
10
CHAPTER1.GETTINGSTARTED
b[1]
Inthesecondpartoftheexample,notethatalist,likeeverythingelseinPython,
isinfactan"object"withactions(called"methods")whichyoucanperformby
appendingthemethodnametotheobjectname.Themodoperatorisusefulfor
makingcircularlists,whichbeginoverfromtheelementwhenonereachesthe
end.Forexammple,if
a
isanylist,
a[i%len(a)]
willaccessthelistasifitwere
bentaroundinacircle.Thesametrickworksforanyinteger-indexedobject.
Pythondistinguishesbetweenlistsandtuples.Thesearesimilar,exceptthat
listscanbemobuttuplescannot.Listsaredenotedbysquarebrackets,
whereastuplesaredenotedbyparentheses.Theaboveexampleisalistratherthan
atuple.Youcanatuple,butoncedeyoucannotmodifyitinanyway,
eitherbyappendingtoitorchangingoneofitselements.Thereareaveryfewcases
wherePythoncommandsspallyrequireatupleratherthanalist,inwhichcase
youcanturnalist(say,
mylist
)toatuplebyusingthefunction
tuple(mylist)
.
Stringsarealsoobjects,withtheirownsetofusefulmethods.Forexample:
a='Fivegallonsofwormsina3gallonbarrel!'
a.split()
b=a.split()
printb[0],b[3],b[4]
Notethatthesplit()methodreturnsalist,whoseelementsarestrings.Bytheway,
inPython,youcanuseeithersinglequotesordoublequotestoencloseastring,as
longasyouusethemconsistentlywithinanyonestring.Thereisnoin
thebehaviorofsinglequotedanddoublequotedstrings.Forstrings,the
+
operator
isconcatenation,i.e.
a+b
istheconcatenationofthetwostrings
a
and
b
.
Itisveryoftenusefultobeabletobuildstringsfromnumericalvaluesinyour
script.Thisneedoftenarisesinformattingprintoutofresultstolooknice,orin
generatinges.Suppose
a=2
and
b=3
.Then,thefollowingexampleshow
howyoucaninsertthevaluesintoastring:
s='%d+%d=%d'%(a,b,a+b)
prints
notethatthe"input"totheformatstringmustbea
tuple
,notalist;recall,
however,thatif
L
isalist,thefunctioncall
tuple(L)
willreturnatuplewhose
elementsarethoseofthelistinputastheargument.Ifthetuplehasonlyone
element,youcanleaveotheparentheses.Theformatcode
%d
(orequivalently
%i
)
convertsanintegerintoastring.Youuse
%f
foratingpointnumbers,and
%e
for
1.2.FUNWITHPYTHON
11
tsinsciennotation.Thereareotheroptionstotheseformatcodeswhich
giveyoumorecontrolovertheappearanceoftheoutput,andalsoseveraladditional
formatcodes.
Nowmakeupafewexamplesofyourownandtrythemout.
1.2.3Modules
TodoalmostanyusefulsciencewithPython,youwillneedtoloadvariouslibraries,
knownas"modules."Actually,amodulecanbejustanordinaryPythonscript,
whichvariousfunctionsandotherthingsthatarenotprovidedbythecore
language.Amodulecanalsoprovideaccesstohigh-performanceextensionswritten
usingcompiledlanguages.
Tomakeuseofamodulewithname
myModule
,youjusttype:
importmyModule
.
Membersofthemoduleareaccessedbyprependingthemodulenametothemember
name,separatedbya".".Forexample,if
myModule
containstheconstant
r
earth
,
andthefunction
sza
,theseconstantisaccessedusing
myModule.r
earth
andthe
functionisevaluatedat
t
using
myModule.sza(t)
.Ifyoudon'tneedtokeepthe
module'smembersseparate,youcanavoidtheneedofprependingthemodulename
byusing
frommyModuleimport*
.
Thestandardmathfunctionsareinthemodule
math
,andyoumakethemavail-
ablebytyping
importmath
.Toseewhat'sthere,type
dir(math)
;thisworksfor
anymodule.Now,tocompute
sin
(
ˇ=
7
:
)forexample,youtype
math.sin(math.pi/7.)
.
Tooutmoreaboutthefunction
math.sin
,justtype
help(math.sin)
.Ifyou
don'tliketyping
math.sin
,youcanimportthemoduleusing
frommathimport*
instead,andthenyoucanjustuse
sin
,
cos
,etc.withoutthepre.
1.2.4Gettinghelp
Pythonhasextensivebuilt-inhelpfunctions,whichmakeitpossibletolearnnew
thingsandavoidprogrammingerrorswithoutfrequentrecoursetomanuals.Given
thatsomuchofPythonisfoundinvariouslanguageextensionsthePythoncommu-
nityhaswritten,theavailabilityofembeddeddocumentationisbeholdentothegood
behavioroftheprogrammer.Pythonfostersacultureofgoodbehavior,andtries
tomakeiteasyfordeveloperstoprovideamplehelpanddocumentationintegrated
withthetoolstheyhavedeveloped.
ThemainwaysofgettinghelpinPythonarethe
help()
and
dir()
functions.
Forexample,youhavelearnedaboutthe
split()
methodthatisoneofthemethods
availabletostrings.Supposeyoudidn'tknowwhatmethodsordataattributeswent
12
CHAPTER1.GETTINGSTARTED
alongwithastring,though?Ratherthangoingtoahandbook,youcanusethe
dir()
functiontooutthissortofthing.Forexample,if
a
isastring,youcan
type
dir(a)
togetalistofallitsmethods,andalsoallitsdataattributes(e.g.
itslength).Then,ifyouwanttoknowmoreaboutthe
split()
methodyoucan
type
help(a.split)
(Warning:don'ttype
help(a.split())
,whichwouldlook
forhelpitemsonthewordsinthecontentofthestring!).Bothstringsandlists
havemanyusefulandpowerfulmethodsattachedtothem.Manyofthesewillbe
illustratedinthecourseoftheexamplesgivenintherestofthisWorkbook,but
youareencouragedtoexplorethemonyourown,byoutaboutthemusing
dir()
and
help()
,andthentryingthemout.
Sowhenindoubt,try
help
and
dir
.Oneortheotherwillgiveyousomeuseful
informationaboutjustaboutanythinginPython.Ifthesystemyouareworking
onhasthePythonHTMLdocumentationinstalled,youcanevengethelpon
PythonsyntaxandPythonkeywordsonline.Forexample,tooutwhatthe
Pythonkeyword
for
means,youjusttype
help("for")
.
Further,sincePythonisinterpretedratherthancompiledintomachinelan-
guage,ifyouhavesomePythonprogramswrittenbysomebodyelse,youcanalmost
always"lookunderthehood"toseehowtheywork.Thatisnotgenerallypossible
withcompiledlanguageswhereyouoftendon'thaveaccesstotheoriginalsource
code.
1.2.5Programcontrol:Looping,conditionalsandfunctions
Nowwe'rereadyforsomemoreinvolvedprogrammingconstructions.Thebasic
techniqueforwritingaloopisillustratedbythefollowingexample,whichprintsout
theintegersfrom0through9:
foriinrange(10):
x=i*i
printi,x
NotethatinPython,indentationispartofthesyntax.Intheaboveexample,
theindentationistheonlywayPythonhastoidentifytheblockofinstructions
thatisbeingloopedover.Indentationinablockofcodemustlineup,andyou
needtobecautionsnottoconfusespacesandtabs.Theuseofindentationas
asyntacticelementinPythonenforcescodereadabilityandreducestheneedfor
specialidentrstoterminateblocks.
Theconstruct
range(10)
isactuallyshorthandforthe10-elementlist
[0,1,2,3,4,5,6,7,8,9]
1.2.FUNWITHPYTHON
13
Infact,oneofPython'smanycharmsisthata
for
loopcanloopovertheelements
ofanylistatall,regardlessofwhattheelementsofthelistmaybe.Thus,the
followingexamplesumsupthelengthoffourstrings:
myList=['bob','carol','ted','alice']
n=0
fornameinmyList:
n=n+len(name)
Thiscanbeveryusefulforloopingovernameswithdataneedingtobeprocessed,
ordataarrayswhichneedsomethingdonetothem,andallsortsofotherthingsthat
willoccurtoyouonceyougetaccustomedtotheconcept.
Analternatetoloopingoveralististousethe
while
construction,asin:
x=1.
whilex<100.:
printx
x=1.1*x
Now,forpractice,writealooptocompute52factorial(i.e.52*51*...*1).Note
thatPythonautomaticallystartsusinglongintegerswhenitneedsto.
Indoingcomputations,itistypicalthatoneneedstotestforthesatisfaction
ofaconditionatsomepointbeforeproceeding.Forexample,onemightneedtotest
whetheratemperatureisbeloworabovefreezingtodecidewhethertoformiceor
liquidwater.Programminglanguagesgenerallyprovidesomeconditionalcontrolto
handlethissituation,andPythonisnoexception.Thefollowingillustratestheuse
ofan
if
blockinPython:
ifT<273.15:
print"Toocold!"
andanextended
if
block:
ifT<273.15:
print"Toocold!"
elifT>373.15:
print"Toohot!"
else:
print"Justright!"
14
CHAPTER1.GETTINGSTARTED
An
if
blockcanhaveasmany
elif
blocksasyouneed,andtheconditionalbeing
testedcanbeanythingthatreasonablyevaluatestoatruthvalue.Todistinguish
fromassignment,theequalityrelationisexpressedbythesymbol
==
.Thesymbols
<=
and
>=
havetheobviousmeanings.Theexclamationpointnegatesarelation,
andPythonalsoprovidestheoperator
not
tonegatethetruthvalueofanarbitrary
logicalexpression.Forexample
1!=0
and
not(1==0)
meanthesamething.
CompoundexpressionscanbebuiltupfromtheBooleanoperatorsfor"and"(
&
)and
"or"(
|
,theverticalbar).Pythonalsoprovidesthekeywords
True
and
False
for
logicalvalues,butregularintegers1and0generallydojustaswellinconditionals.
Theorganizationofalmostanyprogramcanbenefromthesubdivisionof
thelaboroftheprogramintoanumberoffunctions.Thismakestheprogrameasier
todebug,sincefunctionscanbetestedindividually.Italsoallowsthere-useofcode
thatisneededinmanytplacesintheprogram.Thebasicmeansof
afunctionisillustratedinthefollowingexample,whichreturnsthesquareofthe
argument:
deff(x):
returnx*x
Fromthecommandline,youwouldinvokethisfunction,onceitisbytyping,
e.g.
f(3)
.
Pythoncanevenhandlerecursioninfunctions.Thatis,functionscanbe
intermsofthemselves.Asanexample,afunctiontocomputethefactorial
of
n
couldbewritten:
deffactorial(n):
ifn==0:
return1
else:
returnn*factorial(n-1)
Functionscanreturnmultiplearguments,asin:
defpowers(x):
returnx,x*x,x*x*x
Thisreturnsatuplecontainingthethreevalues.Itcanbeverynicelyusedwith
Python'sabilitytosetmultipleitemstocorrespondingitemsofatuple,usingcon-
structionsoftheform:
x1,x2,x3=powers(2)
1.2.FUNWITHPYTHON
15
Pythonfunctionsworkonlyona
copy
ofthearguments.Itisimportantto
keepthisinmind,sinceitmeansthatanychangesmadetothesearguments("side-
cts")donotthevariable'svalueinthecallingprogram.Trythis:
deff(myValue):
myValue=0
x=1
printx
f(x)
printx
Inthisexample,
x
isunchangedbecausefunctionsworkonlyonalocalcopyoftheir
arguments.However,iftheargumentisanamewhichpointstothelocationof
somedata,thedatapointedtocanbemointhefunction.Thismayseem
somewhatarcane,butthefollowingsimpleexamplemodifyinganelementinalist
shouldillustratethegeneralprinciple:
deff(myList):
myList[0]=myList[1]
L=[1,2,3,4,5]
f(L)
printL
Ifyouwanttoreplacethelistwithacompletelynewlist,basedontheoldone,the
rightwaytodothisistoreturnthenewlist,ratherthandoinganythingtothe
argument:
defbump(myList):
newList=[]
foriteminmyList:
newList.append(item+1)
returnnewList
Then,iftheuserreallyintendedtoreplacetheoldlist,heorshewoulduse
L=
bump(L)
Often,theevaluationofafunctionwillrequireanumberofconstantsorpa-
rameterswhichyoumightnotneedtochangeveryoften,orwhicharecommonto
agreatmanytfunctions.Thesecouldalwaysbeaddedtotheparameter
list.Iftherearemanyofthem,thatcouldbecometedious.Soonyouwilllearnhow
16
CHAPTER1.GETTINGSTARTED
tocreateobjectswhichprovideawaytopackagedatainawaythatallowsyouto
keeptheargumentlistoffunctionsundercontrol.Thereisyetanothertechnique,
though,thatcanbeusefulifusedwithdiscretion,namelythe
globalvariable
.
Globalvariablesaresetoutsidefunctions,andcanbeaccessedbyanyfunction
thatneedsthem.Inmanylanguages,globalvariablesneedtobedeclaredexplicitly,
butPythonsimplymakesanintelligentguessaboutwhatyouintendtobeglobal.
Basically,ifavariableisusedwithinafunction,butisneithersetinthefunctionnor
isintheargumentlist,Pythonassumesittobeglobal.Notethatthesamevariable
namecanbelocalinonefunction(ifitissetinternally),butglobalinanother.
Asanexampleoftheuseofglobalvariables,considerthefunctioncomputingthe
accelerationofgravitytowardsthecenterofaplanetattheorigin:
defgrav(r):
return-G*M/(r*r)
Thishasaproblem,becausethegravitationalconstant
G
andthemassoftheplanet
M
havenotbeenanywhere.It'sbadpracticetohard-wiretheirvaluesinthe
function,becausethenit'sinconvenienttochangethemlater.Ifyoutryevaluating
thefunctionafteryou'veit,you'llgetanerrormessage(tryit).However,if
youtype:
G=6.6742e-11#Inmksunits
M=6.4185e23#MassofMarsinkg
grav(1.e12)
everythingwillworkYoudonotneedtotheglobalsuntilyouwantto
evaluatethefunction,andyoucanchangetheirvaluesatanytime.
Thisisconvenient,butifyouhavetoomanyglobalsbeingsetintoomany
places,itcanbehardtokeeptrackofwhatisgoingon.Itisalsobadpractice
touseglobalsforthingsyouwillchangealot,whichwouldmoreappropriatelybe
arguments.Thebehaviorofglobalscanbecomeevenmoreconfusingifyouhave
functionsspreadacrossseveralt.Nonetheless,youwillencountermany
caseswhereusingafewglobalsdoesthejobnicely.
1.3ProgressinginPython
Havingcoveredthebasics,wenowintroducesomePythontechniquesthatwillbe
ofuseinwritingprogramstodomorecomplextasks.
1.3.PROGRESSINGINPYTHON
17
1.3.1Writingyourownmodulesandexecutablescripts
Amoduleshouldbethoughtofasalibraryofusefuldeions,includingvaluesof
constants,lists,deionsoffunctions,objenofobjecttypes,andwhat
haveyou.Amodulecanalsocontainexecutablecommandsofanytype,which
areexecutedbytheinterpreterwhenthemoduleisimported.Infact,Python
doesn'tmakeanyrealdistinctionbetweenamoduleandanyotherexecutablescript.
Generally,youshouldthinkofmodulesasaplacetostorethingsthatyouwilluse
repeatedly.AlthoughyoucanexecuteamoduleanywaythataPythonscriptcan
usuallybeexecuted,amoduleisintendedtobeusedbyimportingitintosomeother
scriptthatneedstheentitiesbythemodule.
Generally,whendevelopingcodeinPython,youalwayshaveaninterpreter
windowopenandan
idle
editorwindow.Youtrythingsoutintheinterpreter
window,andifthingswork,youmovethingsintotheeditorwindow,whichyou
saveforuseasanexecutablescriptorasamodule.
Let'ssaythatyou'vewrittenaPythonscriptandsaveditas
myModule.py
.
Thisscriptmightexecuteabunchofcalculations,oritmightjustfunctions
thatyouwanttouseinteractivelyfromthePythoncommandline,oritmight
doboth.YoucanrunthisPythonscriptfromwithinthePythoninterpreterby
typing
importmyModule
.Thiswillrunalltheexecutablestatements,andalsoload
anyfunctionsandsoforththatyou'veinyour.Thiswayofrunning
isespeciallyusefulifyou'vedealotofniftyfunctionsinyourandthen
wanttoloadtheminsothatyoucantrythemoutinteractivelyintheinterpreter.
Notethatallvariablesandfunctionsimportedinthiswaymustbereferredtowith
myModule.
stuckonthebeginningofit'sname.Thus,ifyourhadthestatement
radius=6.0e6
init,onceyouimportedthe,youwoulduse
myModule.radius
togetatthevalueof
radius
.SupposenowthatyouwanttochangethePython
programyou'vejusttriedout.Forexample,youmightwanttochangethe
oftheradiusto
radius=6.0e07
.Youcanedit
myModule.py
intheeditorwindow
andsaveit,buttogettheinterpretertorecognizethechanges,itdoesn'twork
tosimplyimportitagain.Instead,youneedtotype
reload(myModule)
intothe
interpreter.
YoucanimportmanytscriptsintoyourPythoninterpretersession,
andalsousethe
import
commandinscriptsyouwriteyourself.Indeed,thisisthe
waythatextensionstoPythonarehandled.
Ifyou'vewrittenascriptthatperformssomeonetask(e.g.makingaplot
ofatemperatureitisnotgoodpracticetoexecuteitbyimportingitasa
module.Rather,youshouldsavethe(say,
myprog.py
,thenexecuteitfromthe
commandlinebytyping
pythonmyprog.py
,orbyloadingitintoaneditorwindow
18
CHAPTER1.GETTINGSTARTED
in
idle
andexecutingitfromthere.
1.3.2Listcomprehension
Listcomprehension
referstotheabilitytocreatenewlistsbyprocessingelements
ofoldlists.ItisoneofthepowerfulfeaturesofPythonthatallowsonetowrite
compact,readablecode,oftendoingwithoutmultilineloops.Asasimpleexample,
saywewanttogeneratealistof10realnumbersequallyspacedbyincrementsof
1.Insteadofwritinga
for
loopandappendingthevaluestoalist,onecansimply
write
[.1*iforiinrange(10)]
.CombinedwiththeabilityofPythontoloop
overanylistatall,thisisveryversatile.Forexample,onecanwrite
[f(.1)for
fin[math.sin,math.cos,math.exp]]
.Supposewehaveanaveragingfunction
avg
whichreturnstheaverageoftheelementsofalist.Then,if
L
isalistoflists
wewanttoaverage,wecancreatealistofaveragevaluesbywriting
[avg(list)
forlistinL]
ThepoweroflistcomprehensionisfurtherenhancedbyPython's
abilitytodomultipleassignmentsonasingleline.Forexample,supposewewant
toopenthrees,withnames
data0
,
data1
,and
data2
.Thiscanbedoneona
singlelineusing
file0,file1,file2=[open(name)fornamein['data%d'%iforiinrange(3)]]
The
open
statementwhichappearsinthisexampleisabuilt-inPythonfunction
thatopensaandreturnsaobjectthatcanbeusedtoreadthecontentsof
the,orwritenewcontentstothe
1.3.3UsingobjectsinPython
Anobjectisacollectionofdataandfunctionsthatactonthedata.Thefunctionsin
anobjectareknownas
methods
AlmosteverythinginPythonisanobject,andyou
haveinfactworkingwithmanyobjectsallalong.Forexample,if
mystring="Use
theforce!"
,thenwhenyousplititusing
mystring.split()
youareinvoking
the
split
methodofastringobject.Theelementsofanobjectarereferencedby
separatingthenameoftheobjectfromtheelementbyaperiod,asinthestring
example.Afunctioniscalledwithparentheses,likeanyotherfunction,andavalue
issimplyreferredtowithoutparentheses.Objectscan,ifthedesignersoprovides,
domanyotherthings.Objectscanbecalledlikefunctions.Theycanbeindexedlike
listsorarrays(asin
myobject['frodo']
,andtheycanevenbeusedinarithmetic
expressions.
Thedesignerofanobjectdoesnotactuallytheobjectitself.Thede-
signerdea
class
ofobjects.Whenyouuseanobject,youcreatean
instance
1.3.PROGRESSINGINPYTHON
19
oftheobject,justlikeanindividualguineapigisaninstanceofthegeneraltype
ofobjectknownas
GuineaPig
.Supposesomebodyhasaclass
GuineaPig
,
whichwheninstantiatedhastobegivenanameandaweightinkilograms.You
createaninstancebytyping
myPiggy=GuineaPig("Fluffy",1.2)
.Thereafter,
youcangettheweightbytyping
myPiggy.weight
andthenameby
myPiggy.name
.
Theobjectmightalsohavevariousmethods,suchas
myPiggy.squeak("loud")
,
or
myPiggy.purr()
or
myPiggy.eat()
.The
eat
methodmightdosomethinglike
incrementtheweightwhenitiscalled.Youcancreateasmany
GuineaPig
objects
asyoulike,andeachwillkeeptrackofthedatabelongingtoitself.
InPython,objectscanbedynamicallymoed.Thatmeansthatnewmeth-
odscanbeaddedtoanexistinginstanceofanobjectatanytime.Thiscanbevery
handyforpackagingupfunctionsandparametersforhandingoasanargument
toanotherfunction.The
ClimateUtilities
modulewrittenforthisWorkbook
providesa
Dummy
classforthispurpose.Itcreatesanobjectwithnothinginit,
whichyoucanmodifyasyoulike.Thefollowingexampleshowshowyoucancreate
anobjectwiththegravitationalconstant,themassoftheMars,andafunctionas
members.
fromClimateUtilitiesimport*
info=Dummy()
info.G=6.6742e-11
info.M=6.4185e23
#
deff(x):
returnx/(1.+x)
#
info.function=f
Thefollowingshowshowyoumightdeafunctionusingthisinformation:
defg(r,input):
returninput.G*input.M*input.function(r)/r**2
Youwouldcallthisfunctionwithastatementlike
g(1.e7,info)
.Tryit.
Thisbriefdiscussionisintendedtoprovideenoughbackgroundtoallowyou
toworkwithclassesothershavedeTheusageofobjectswillbecomeclearer
asyougainmoreexperienceworkingwiththem.IntheAdvancedTopicssectionto
follow,wewilltakeupthematterofdesigningyourownobjects.
20
CHAPTER1.GETTINGSTARTED
1.3.4The
Numeric
arraypackage
Listslooklikearrays,andareversatileobjects,buttheyarenotveryntat
thefunctionsoneexpectsofthekindofarraysthatappearinmoderateto
largescalesciencomputation.Itwouldbepossibletowritea2Dmatrixasalist
oflists,andevenimplementmatrixmultiplicationandvectoradditionforsuchan
object.However,itwouldbeveryient,becauselistsprovideforaverygeneral
andmutabledatastructure.Pythondoeshaveanativearraydatatype,whichis
somewhatmoret,butisstillnotverygoodforsciencomputing.
ThisiswheretherealpoweroftheextensibilityfeatureofPythoncomesin.
Whenthelanguageismissingsomefeaturesomecommunityreallyneeds,thecom-
munitygetstogetherandwritesanextensionmodulewhichthebill.Sometimes
thisisacooperativeprocess.Sometimesitisanevolutionaryprocess,withmany
competingextensionsco-existinguntilonecomestodominate.Forscienarrays,
thesolutionthathascometotheforeisthe
Numeric
module,whichprovideshighly
ntMatlab-stylearrayobjects.
Numeric
isnotwritteninPython.Itiswritteninveryhighlyoptimized
c++
,
whichiswhyitissoient.Thisdoesnotmeanthedevelopersof
Numeric
had
tolearnalotabouttheinternalstructureofPythonorspendmuchtimeatall
turningtheircompiledlibraryofobjectsintocommandsthatcouldbeaccessed
withinPython.Infact,oncesuchalibraryisdeveloped,itcanbeturnedintoa
Pythonmodulemoreorlessautomaticallyusingapreprocessorknownas
swig
(see
swig.org
formoredetails).CompiledFORTRANlibrariescanbesimilarlyspliced
intoPythonusing
pyfort
or
f2py
.Forthisreason,agreatvarietyofnumerical
analysislibrariesarealreadyavailableasPythonmodules.Moreover,ifyouknow
howtoprogramin
c
,
c++
orFORTRAN,youcanveryeasilylearntobuildyourown
customizedPythonmodules.Thegeneralstrategyistodoaslittleaspossibleatthe
compiledlevel,buildingtoolstherethatareverygeneralandofbroadapplicability.
Oneseekstoisolatethecomputationallyintensiveworkinafewcompiledtoolkits,
andbuildmorecomplexmodelsoutofthesebuildingblocksatthePythonlevel.
Numeric
providesoneofthemostfundamentalbuildingblocksforscien
programminginPython,andmostotherPythonmodulesdoingnumericalanalysis
ordataanalysisdealwith
Numeric
arrays.The
Numeric
moduleisimportedlike
anyothermodule,using
importNumeric
.Numericarrayscanhavehowevermany
dimensionsyouneed.
ThestepinusingaNumericarrayistocreateit.
Numeric
provides
variouswaystodothis.Tocreateanarray,youneedtospecifyitsdimensions
anditsdatatype.Commonlyuseddatatypesaredefaultt(
Numeric.Float
,
usualydoubleprecision),defaultcomplex(
Numeric.Complex
),anddefaultinteger
1.3.PROGRESSINGINPYTHON
21
(
Numeric.Int
,typicallya32-bitint).
Numeric
doesnotcurrentlysupport64-bit
integersunlesstheyarethedefaultintegertypeonthemachineyouareusing.It
alsodoesnotsupporttheunlimitedprecisionPythonintegers,thoughothermodules
areavailablewhichdo.Dimensionsarespeasatupleoralistofintegers.For
example,thedimensionsofa3by5arrayarespas
(3,5)
or
[3,5]
.Ifthe
arrayisone-dimensional,youcanjustuseanintegerinplaceofalistortuple,if
youwish.
OnewaytocreateanarrayinPythonistocallacreationroutinewhichmakes
anarrayofthedesireddimensionanditinwithdefaultdataofsomeparticular
type.Forexample,thefollowinglinescreatea5by10ingpointarrayofzeroes,
aone-dimensionalintegerarrayofonesoflength100,anda10by10complex
identitymatrix.Youcanseethevaluesofanarray,ifitisnottoobig,byjust
typingitsname.
A=Numeric.zeros((5,10),Numeric.Float)
B=Numeric.ones(100,Numeric.Int)
C=Numeric.identity(10,Numeric.Complex)
Atypicalthingtodowouldbetocreateanarrayofzeroes,theninthevalues
youwantinaloop,asin:
A=Numeric.zeros((5,10),Numeric.Float)
foriinrange(5):
forjinrange(10):
A[i,j]=.1*i*i+i*j/10.
ThisexamplealsoillustratesthewayonereferstoelementsofanarrayinPython.
Pythonarraysarezero-based,i.e.
A[0,0]
isthestelementinthecaseabove.
Thedesignersof
Numeric
providedaveryversatileindexinghandler,soinfactyou
couldequallywellrefertothe
i,j
elementas
A[i][j]
.Inessence,multidimensional
Numeric
arraysactlikealistoflists.We'llreturntothisshortly,inourdiscussionof
arraycrosssectionnotation.Anotherimportantthingtoknowabout
Numeric
array
indexingisthatitconformstoPythonlistusagewithregardtonegativenumbers.
Forexample,if
B
isaone-dimensionalarray,
B[-1]
isthelastelementofthearray,
B[-2]
isthenexttolast,andsoforth.Trythiswitha2Darray,tomakesureyou
understandtheindexingconvention.
Anarraycanalsobecreatedfromalist.Youcanlet
Numeric
inferthedata
typefromthecontentsofthelist,oryoucanspecifyitexplicitly,inwhichcasea
conversionisperformed.Trythefollowingstatements,andseewhatkindofarray
isproduced:
22
CHAPTER1.GETTINGSTARTED
A=Numeric.array([.1,.2,.3])
B=Numeric.array(range(20),Numeric.Complex)
C=Numeric.array([[1.,2.],[-2.,1.]])
Anotherusefulwaytocreateanarrayistoitintermsofafunction
ontheindices,so
A[i,j]=f(i,j)
,
f
beingsomefunctionyouhaveThis
isprobablythemostcommonwayofcreatingthekindofarrayusedinscient
computationwithoutemployingaloop.Itwillgenerallyoperatemuchfasterthan
aPythonloop,especiallyforlargearrays.Thefollowingillustrateshowtocreatea
10by10arrayfromafunction:
dx=.1
dy=.2
deff(i,j):
x=dx*i
y=dx*j
returnx*x+y*y
A=Numeric.fromfunction(f,(10,10))
Thetwoparameters
dx
and
dy
areprovidedtothefunction
f
asglobals,becausethat
istheonlyway
Numeric
hasprovidedtopassauxiliaryinformationtothefunction
thearray.Thereisanimportantsubtletyintheuseof
fromfunction
.The
parameters
i
and
j
looklikeintegers,butinfacttheyarearraysofthesamedimen-
sionasthearraybeingcreated.Theaboveexampleworksbecausethearithmetic
beingdoneontheargumentsisactuallyarrayarithmetic.Thisallows
fromfunction
tocallthefunctiononlyasingletime,ratherthaninaloop,andresultsinamuch
fastercomputation.Ifyouareusingotherfunctionsorlistindexinginsideyour
creationfunction,youmusttakethisintoaccount.Forexample,thefollowingcode
willwork:
dx=.1
dy=.2
deff(i,j):
x=dx*i
y=dx*j
returnNumeric.sin(x)*Numeric.sin(y)
A=Numeric.fromfunction(f,(10,10))
butifweused
math.sin
and
math.cos
instead,itwouldnotwork,sincethese
functionsdonotoperateonandreturn
Numeric
arrays.Similarly,anexpressionlike
myList[i]
willnotworkinsidethefunction
f
since
i
isnotaninteger,andsocan't
1.3.PROGRESSINGINPYTHON
23
beusedasanindex.Thereareworkarounds,butgenerallyspeaking,
fromfunction
doesnotworkverygracefullywithtablelook-upoperations.Ifyouarestillconfused
aboutjustwhat
i
and
j
are,tryputtingaprintstatementinthefunctiontoprint
outthearguments.
Thereareotherwaystocreatearrays,buttheabovemethodsshouldtakecare
ofanycasesyouarelikelytoencounter.Wehavealreadyillustratedhowtorefer
toindividualarrayelements,butitisworthknowingaboutsomeofthepowerful
arraycrosssection
indexingfeaturesallowedbyNumeric,whichallowyoutorefer
tosubarrayseasily.Pythonusesthecolon(
:
)asanidentobuildcrosssections.
Thecolonbyitselfstandsforthefullrangeofvaluesofthecorrespondingindex.For
example,if
A
isa5by5array,thesubarray
A[:,0]
istheonedimensionalarraywith
elements
A[0,0],A[1,0],...,A[4,0]
.Anindexoftheform
m:n
woulddenotethe
rangeofvalues
m,m+1,...,n-1
,sothat
A[1:3,0]
wouldbethearraywithelements
A[1,0],A[2,0]
.Ifyouleaveooneoftheendpoints,Pythonsubstitutesthe
arrayelementforthestartingpoint,orthearrayelementfortheendingpoint.
If
B
werea100elementarray,forexample,
B[:25]
wouldbethesameas
B[0:25]
and
B[50:]
wouldbethesameas
B[50:100]
.Finally,youcanspecifyastride,
allowingyoutopickevery
k
t
h
element.Thus,
0:10:3
representsthesetof
indices
0,3,6,9
.Youcancombinesubarrayindicesforthevariousdimensionsof
anarrayinanywayyouwant,asin
A[0:8:2,5:]
.
Nowwecometothemostpowerfulaspectof
Numeric
arrays,namelythatone
candoarithmeticwiththemjustasiftheywerescalars,avoidingthewritingof
ntandcumbersomeloops.Thefollowingstatementsillustratethekindof
arithmenticoperationsthatcanbeperformedwitharrays.Notethatyouwillget
anerrorifyoutrytoperformarithmeticonincompatiblysizedarrays(e.g.adding
a10by10arraytoa5by5array).
A=Numeric.ones((10,10),Numeric.Float)
B=Numeric.identity(10,Numeric.Float)
C=(A-B)*10.#Youcanmultiplybyascalar
C1=(A-B)*B#Youcanmultiplybyanarray
D=A/(A+2)#Youcandividearrays.
E=C**5.2#Exponentiation
Theexpressionscanbeascomplicatedasyouwant.Notethat
Numeric
array
multiplicationiselement-by-elementmultiplication,ratherthanmatrixmultiplica-
tion(andsimilarlyfordivision).Ifyouwantmatrixmultiplicationyouusethe
Numeric.dot(...)
function,asin
C=Numeric.dot(A,A)
.Whenthetwoarrays
are1D,thisreducestotheconventionalvectordotproduct.Thereisalsoafunction
Numeric.outerproduct
whichcomputestheouterproductoftwoarrays.
Numeric
24
CHAPTER1.GETTINGSTARTED
doesnotprovideafunctionformatrixinversion;thatcanbefoundinvariousother
linearalgebrapackagesmadetoworkon
Numeric
arrays.
Numeric
alsoprovidesversionsofthestandardmathfunctions,thatwork
onentirearrays.Forexample
B=Numeric.sin(A)
returnsanarrayofthesame
dimensionas
A
,whoseelementsarethesinofthecorrespondingelementsof
A
Arrayarithmeticcanbedonebetweenarraysofttypes,iftheoperation
makessense.Theresultispromotedtothehigherofthetwooperands.Forexample,
addinganintegerandacomplexresultsinacomplex,oraddingasingleprecision
ttoadoubleprecisionatyieldsadoubleprecisiont.Thedefaultat
typefor
Numeric
arraysisdoubleprecision.AllatingpointscalarsinPythonare
alsotreatedasdoubleprecision,soanoperationinvolvingaPythonatconstant
anda
Numeric
tarraywillyieldadoubleprecisionarray.
Crosssectionscanbeusedwitharrayarithmetictocomputemanyuseful
derivedquantitieswithouttheneedofwritingloops.Forexample,anapproximation
tothederivativeofafunctionwhosevaluesatanarrayofpoints
x
aretabulatedin
thearray
F
(i.e.
F[j]=f(x[j])
)canbecomputedusing:
#Weassumethefunctionfandthearrayxhavebeendefinedalready
F=Numeric.array([f(x1)forx1inx])
n=len(x)
dx=x[1:n]-x[0:(n-1)]
df=F[1:n]-F[0:(n-1)]
dfdx=df/dx
xmid=(x[1:n]+x[0:(n-1)])/2.
Thelinedethearrayofmidpoints,wherethederivativehasbeenestimated.
Notetheuseoflistcomprehensiontogeneratethearray
F
.Arraycrosssectionscan
alsobeusedtodomatrixrowandcolumnoperationsetly.Forexample,
suppose
A
isannbynmatrix.Thenasetofrowandcolumnreductionscanbe
donewiththefollowing1Dloop:
foriinrange(n):
A[i]=A[i]-2.*A[0]
A[:,i]=A[:,i]-3.*A[:,0]
Youcanevendoafairlybroadclassofconditionaloperationsonarrays,using
the
Numeric.where
function.Thisfunctiontakesthreearguments.Theisa
conditionalinvolvinganarray.Thesecondisanarrayexpression,tobeevaluated
andreturnediftheconditionalisThethirdargumentistheexpression
tobereturnediftheconditionalisnotForexample,thefollowinguseof
1.3.PROGRESSINGINPYTHON
25
where
returnsthearray
A
where
B
isnegative,andreturnsthevalue1.where
B
is
non-negative:
C=Numeric.where(B<0,A,1)
Notethatthearray
A
musthavethesamedimensionsas
B
,sincetheconditional
isevaluatedelement-by-element.Theexpressionscanbequitecomplicated.For
example:
C=Numeric.where(Numeric.sin(B)>0,Numeric.exp(1.+B*B),Numeric.exp(1.-B*B))
Thecombinationofarraycrosssections,conditionalsandarrayarithmeticis
sopowerfulthatoneshouldonlyrarelyneedtoresorttowritingaloop.Thisis
agoodthing,sincelargeloopsrunveryslowlyinPython,asinotherinterpreted
languages.Trycomputingthematrixproductoftwo200by200arraysusingan
explicitloop,andcomparetothetimetakentodothesamemultiplicationusing
Numeric.dot
.Avoidingloopsisalsogoodpracticebecauseitmakesthemeaning
ofyourcodemoretransparent.
Numeric
arichvarietyofotherusefularrayoperations,suchasconvolu-
tion.Foradditionalinformationon
Numeric
,justtype
help(Numeric)
afteryou've
importedit.Fulldocumentationcanbefoundat
www.pfdubois.com/numpy/
.
1.3.5TheCurveobjectanditsuses
The
ClimateUtilities
modulewrittenforusewiththisWorkbookprovidesa
Curve
object,whichisintendedtosimplifytheprocessofreading,andwriting
plain-texttabulardata,andofplottingdatawhichhaseitherbeenreadinfroma
orgeneratedbysomecalculationinyourscript.Inessence,a
Curve
objectisa
setofdatacolumns,eachofwhichmustbethesamelength,togetherwithoptional
auxiliaryinformationdescribingthedata.Theauxiliaryinformationalsoallowsyou
tospecifycertainthingsabouthowthedatawilllookwhenitisplotted.
Tousea
Curve
object,youcreateone,andthen"install"datacolumnsusing
the
addCurve(...)
method.Since
Curve
objectsareintendedtorepresentdatasets
inwhichanyelementofacolumncanberegardedasafunctionofthecorresponding
elementofanothercolumn,alldatacolumnsinstalledmusthavethesamelength.
Youcaninstallanyone-dimensionalindexableobject,includinglistsand
Numeric
arrays.Ifyouinstallalist,itwillbeconvertedautomaticallytoa
Numeric
array,
soyoucandoarithmeticwithit.
Thefollowingexamplecreatesacurveobjectcontainingvaluesof
x
,
sin(x)
and
cos(x)
.
26
CHAPTER1.GETTINGSTARTED
importmath
fromClimateUtilitiesimport*
x=[(i/10.)*2.*math.pi.foriinrange(101)]
y1=[math.sin(xx)forxxinx]
y2=[math.cos(xx)forxxinx]
c=Curve()
c.addCurve(x,'x','xaxislabel')
c.addCurve(y1,'y1','sin(x)')
c.addCurve(y2,'y2','cos(x)')
Theargumentismandatory,sinceitthedatayouwanttoinstallinthe
Curve
.Thesecondargumentof
addCurve
avariablename,whichyouwill
usetorefertothatdatacolumn.Itisoptional.Ifyouomitit,the
Curve
objectwill
createavariablenameoftheform
v0,v1,v2,...
.Ifyouspecifyavariablename
yourself,youcanalsooptionallyspecifya"longname,"orlabel,whichisusedto
labelthecorrespondingdatawhenplotting,andalsotoprovidemorelong-winded
informationaboutwhatthevariablerepresents.Thelabelcanbeagoodplaceto
recordtheunitsofavariable.
Curve
objectsareindexed.Yourefertoadatacolumnbyitsvariablename.
Intheaboveexample,
c['x']
returnsa
Numeric
arrayofthe
x
column,and
c['x'][30]
wouldreturnitem30ofthatarray.Youcangetalistofvariablenames
ina
Curve
objectbyusingthe
listVariables
method,asin
c.listVariables()
AgoodgeneraltechniqueforputtingdatafromacalculationintoaCurve
objectforsaving,plottingorfurtheranalysisistoaccumulatethedataintoasetof
lists,andtheninstallthelistsinaCurveobject.Thisway,thereisnoneedtoknow
inadvancehowlongthedataobjectswillbe.Whendatafromalistisinstalledina
Curveobjectitisautomaticallyconvertedtoa
Numeric
array.Thefollowingcode
snippetprovidesanexample:
xlist=[]
ylist=[]
x=1.
xfact=1.1
whilex<100.:
xlist.append(x)
ylist.append(x*x)
x=x*1.1#or,equivalentlyx*=1.1
c=Curve()
c.addCurve(xlist,'x')
c.addCurve(ylist,'y')
1.3.PROGRESSINGINPYTHON
27
The
readTable(...)
functionin
ClimateUtilities
willreadcolumnartab
orspace-delimiteddatafromatextandreturna
Curve
objectwiththedata.Itis
calledwiththemeastheargument;forexampletoreadthe
"profile.txt"
,
youwouldtype
c=readTable("profile.txt")
.Thecanalsocontain
thepathtothedirectorywherethedataislocated,ifnecessary.Notethatyoudo
nothavetocreatethe
Curve
objectyourself;thatisdoneforyoubythe
readTable
function.Ifthedatasetcontainscolumnheaderscontainingvariablenames(with-
outspacesortabsinthem),
readTable
willrecognizethatandusethemasvariable
names.
readTable
willalsodoaprettysmartjobofrecognizingwhatisdataand
whatistextdescriptionofthedataset,suchasoftenisfoundatthebeginningor
endofa.Descriptivetextwillbeseparatedoutfromthedata,andreturnedas
the
description
elementofthe
Curve
object.
ClimateUtilities
alsoprovidesaneasy-to-use
plot
functionwhichproduces
linegraphsfrom
Curve
objects.Oneofthedatacolumnsmustbedesignatedasthe
independent,or"x"axis;otherdatawillbeplottedasafunctionofthis.Bydefault,
thecolumninstalledisdesignatedthe"x"axis,butanyothercurvecanbeso
designatedusingthe
Xid
element(e.g.
c.Xid='y1'
intheaboveexample.
Ifyouwanttoplotthedataina
Curve
object
c
,youcansimplytype
plot(c)
.
The
Curve
objecthasthefollowingplotoptions,whichcanbesettocontrolthe
appearanceoftheplot.If
c
isthe
Curve
object,then:

c.XlogAxis=True
plotsthexaxiswithalogscale,andsimilarlyfor
c.YlogAxis
.

c.reverseX=True
plotsthexaxisdatawiththelargestvaluesattheleft,
and
c.reverseY
plotstheyaxisdatawiththelargestvaluesatthebottom.

c.switchXY=True
switchesthexandyaxes.Forexampleifyouareplotting
temperature
T
asafunctionofpressure
p
(whichisdesignatedasthexaxis)
andyouwanttomakethepressureappearontheverticalaxis,youwould
invokethisoption.Ifyouarejustplottingonecolumn,thesamectcould
beachievedbyjustchangingthespn
c.Xid
,butifyouareplotting
multiplecurvesonthesamegraph,youwouldneedtousethe
c.switchXY
option.

Ifyouwantanydatacolumntobeplottedasascatterplot,i.e.withsymbols
atthedatapointsbutnolinedrawn,youcanset
c.scatter(varname)=
True
,where
varname
isthenameofthevariableyouwishto{for
example,
'y1'
inthesinandcoscurvewedearlier.
Whenyoucall
plot
itputsuptheplotinawindowwhichyoucanmovearound,
butwhichyouwon'tbeabletogetridofuntilyouterminatethePythonshell.
plot
28
CHAPTER1.GETTINGSTARTED
actuallyreturnsaplotobjectwhichyoucanusetodofurtherthingswiththeplot.
Inparticular,ifyouweretowrite
w=plot(c)
,thenyoucanmakeuseoftheplot
object
w
.Forexample
w.delete()
getsridoftheplotwindow.Youcanalsousethe
plotobjecttosavetheplotasapostscriptforlaterprintingorincorporating
intoalabreport.Youdothisbytyping
w.save('myplot')
,whichsavetheplotinto
thele
myplot.eps
.Youcanofcoursereplacethe
myplot
withwhatever
nameyouwant.
Ifyoudon'twanttousethepython-basedgraphics,youcanalwaysuse
c.dump('myfile.txt')
whichmakesatab-delimitedtextandthenplotit
usingtheprogramofyourchoice.
1.4AdvancedPythonTopics
1.4.1yourownobjects
Youanewtypeofobjectbyusingthe
class
statement.Thiswillthe
dataandfunctions(knownas"methods")thatwillbepartoftheobject.The
class
statementshouldspecifyaspecialmethodcalled
init
(...)
whichisknownas
a
constructor
.Thismethodisinvokedwhenanewinstanceoftheobjectiscreated,
andsayswhatneedstobedonetocreatetheobject.Sometimesthecreationprocess
isverysimple,butthecreationprocesscanalsobeverycomplex.Certainmethods,
like
init
havespecialmeaning.Allsuchmethodshavenameswithbeginand
endwithadoubleunderscore.
Asasimpleexample,thefollowingclassdeanobjectwhichcanbeused
toevaluatethegravitationalaccelerationasafunctionofdistancetoaplanetwith
massM:
classgravity:
def__init__(self,M,G):
self.M=M
self.G=G
defaccel(self,r):
return-self.G*self.M/(r*r)
Theargument
self
mustbetheargumenttoeverymethodinthe
object.Itprovidesawaytorefertothemembersoftheparticularinstanceofthe
objectbeingworkedon.Whenyouactuallycallthemethods,orcreatetheobject,
youleavethe
self
argumentandPythonputsitinautomatically.Tomakean
1.4.ADVANCEDPYTHONTOPICS
29
objectofthetypewehavejustdeanduseittocomputetheaccelerationata
certaindistance,youwoulduse
g=gravity(6.4185e23,6.6742e-11)#Invokesthe__init__methodtocreatean
#instanceofagravityobject
g.accel(1.e12)#Computestheacceleration
Youcanimprovetheobjectbymakingitcallable,soitactsjustlikeafunction.
Youdothisbyaddinga
call
method:
classgravity:
def__init__(self,M,G):
self.M=M
self.G=G
def__call__(self,r):
returnself.accel(r)
defaccel(self,r):
return-self.G*self.M/(r*r)
Ifyoucreateaninstance
g
ofthisobject,theaccelerationcanbecomputedbyjust
typing
g(r)
.Thisisaconvenienttechniqueforcreatingfunctionsthatremember
theparametersneededtocomputethemselves.
Now,sincethegravitationalconstantisa
universalconstant
whichshouldnever
changefromoneplanettoanother,itisrathersillytohavetospecifyitseparatelyfor
eachplanet.Pythonobjectsallowyoutospecifydatathatiscommontoallobjects
ofagiventype.Ifthisclassdataischangedsomewhere,thechangeappliestoall
objects.Thisbehaviorisusefulnotjustforsharedconstants,butitalsoprovides
awayforoneinstanceofanobjecttocommunicatewithallotherinstancesofan
thesamekindofobject.Classdataisspecwithintheclasswithout
anyidentr.Itisreferredtousingthenameofthe
class
,ratherthanthename
ofaninstance.Thefollowingexamplere-implementstheclass,making
G
intoclass
data,andalsoimplementingaclass-levelcounterthatkeepstrackofthenumberof
planetscreated:
classgravity:
G=6.6742e-11
nPlanets=0
def__init__(self,M):
self.M=M
gravity.nPlanets=gravity.nPlanets+1
def__call__(self,r):
30
CHAPTER1.GETTINGSTARTED
returnself.accel(r)
defaccel(self,r):
return-gravity.G*self.M/(r*r)
Now,youcancreatetwoplanetsusing
planet1=gravity(6.4e23)
and
planet2
=gravity12.e23
.Thetwomassesarestill
planet1.M
and
planet2.M
,andyou
computethegravityforthetwoplanetsusing
planet1(1.e6)
and
planet2(1.e6)
asbefore.Now,however,ifyouneedtochangethevalueofthegravitationalcon-
stant,youcanupdateitforalltheplanetsbywriting,forexample,
gravity.G=
6.672e-11
.Atanytime,thenumberofgravityobjectsinstantiatedsofarwillbe
gravity.nPlanets
.
Inmanyapplications,anobjectwillstoredataintheformofarrays.Insuch
cases,the
init
methodtypicallywillcreatethearraysandsettheirinitialvalue.
Forexample,thefollowingclasscreatesandinitializespressureandtemperature
arraysofasplength:
classprofile:
def__init__(self,n,p0,T0):
self.p=Numeric.array(range(n),Numeric.Float)*p0/(n-1)
self.T=Numeric.ones(n)*T0
defwarm(self,dT):
self.T=self.T+dT
Theclassprovidesamethodwhichincrementsthetemperaturebyanamount
dT
.Onceyouhaveimported
Numeric
,youcancreateaninstanceusing
pT1=
profile(100,1000.,300.)
.Ifyouwanttothepressureatindex4,youwould
type
pT1.p[4]
,andsimilarlyfortemperature.Youcanalsochangethevaluesofthe
arraysasyouwouldforanyother
Numeric
array,using,e.g.
pT1.T[10]=301.
.
Thespecialmethods
getitem
and
setitem
allowyoutomakeanobject
indexable,sothatindividualelementsofanobjectcanberetrievedbyspecifying
anindexofsometype.Arrayelementsareindexedbyspecifyingsequencesof
integers,buttheobjectusedfordoingtheindexingcanbequitegeneral.The
followingexampleshowshowtomakeanduseatridiagonalarrayobject,whichcan
beaddressedasifitwereafullmatrix.
classtridiag:
def__init__(self,n):
self.A=Numeric.zeros(n,Numeric.Float)
self.B=Numeric.zeros(n,Numeric.Float)
self.C=Numeric.zeros(n,Numeric.Float)
1.4.ADVANCEDPYTHONTOPICS
31
def__getitem__(self,key):
#keyisalistofargumentspassedwithinsquare
#bracketswhenanindexingoperationisperformed
#onaninstanceoftheobject.Inthiscase,
#keyisexpectedtobeatwoelementlist.
ifkey[0]<key[1]-1:
return0.
ifkey[0]>key[1]+1:
return0.
ifkey[0]==key[1]-1:
returnself.A[key[1]]#Belowthediagonalcase
ifkey[0]==key[1]:
returnself.B[key[1]]#Diagonalcase
ifkey[0]==key[1]+1:
returnself.C[key[1]]#Abovethediagonalcase
def__setitem__(self,key,value):
#keyisalistofargumentspassedwithinsquare
#bracketswhenanindexingoperationisperformed
#onaninstanceoftheobject.Inthiscase,
#keyisexpectedtobeatwoelementlist.
#
#valueisthevaluetowhichtheelementistobeset.
#Itistakenfromtherighthandsideoftheequal
#signinanexpressionlikeM[i,j]=1.,whereM
#isaninstanceoftheobject.
#
ifkey[0]<key[1]-1:
print"Outofbounds"
ifkey[0]>key[1]+1:
print"Outofbounds"
ifkey[0]==key[1]-1:
self.A[key[1]]=value#Belowthediagonalcase
ifkey[0]==key[1]:
self.B[key[1]]=value#Diagonalcase
ifkey[0]==key[1]+1:
self.C[key[1]]=value#Abovethediagonalcase
Theobjectcouldbeusedasfollows:
M=tridiag(10)
foriinrange(10):
32
CHAPTER1.GETTINGSTARTED
M[i-1,i]=1.
M[i,i]=-2.
M[i,i+1]=1.
printM[9,9],M[2,2],M[2,3]
Squarebracketsareusedinindexingoperations.Ifthesquarebracketscontainonly
asingleitem,thatitemispassedto
getitem
and
setitem
as
key
.Ifthe
bracketscontainasequenceofelementsseparatedbycommas,theyarepassedasa
list,whence
key
hastobetreatedasalist,asintheexampleabove.Thisexample
usesintegersforindexing,buttheindexingmodelinPythoniscompletelygeneral.
AnyPythonobjectsmaybeusedforindexing,includingats,complexnumbers,
strings,andevenobjectsyouhavedyourself.
Oneofthemostpowerfulfeaturesofobject-orientedprogrammingisthatyou
canor
overload
allthearithmeticoperatorssothattheyhavethebehavior
youwantwhenappliedtoyourownobjects.Thisallowsyoutodesigncustomized
datatypesthatallowyoutocondenseverycomplicatedoperationsintocompact
andsimplestatements.Asaverysimpleexample,let'screatea
gaussianinteger
datatype,whichbehaveslikeacomplexnumber,butuseslongintegerssoasto
allowunlimitedprecision.Pythondoesnotprovidethisasanativedatatype,but
thefollowingexampleallowsustodoitourselves:
classgaussInt:
def__init__(self,real,imag):
self.real=real
self.imag=imag
def__add__(self,other):
if(type(other)==type(1))or(type(other)==type(1L)):
returngaussInt(other+self.real,other+self.imag)
else:
returngaussInt(other.real+self.real,other.imag+self.imag)
def__mul__(self,other):
if(type(other)==type(1))or(type(other)==type(1L)):
returngaussInt(other*self.real,other*self.imag)
else:
returngaussInt(other.real*self.real-other.imag*self.imag,
other.imag*self.real+other.real*self.imag)
def__repr__(self):
return"%d+%di"%(self.real,self.imag)
Notethatthearithmeticmethodscreateanew
gaussInt
objecttoreturn.Note
1.4.ADVANCEDPYTHONTOPICS
33
alsothetype-checking,whichallowsarithmetictobeperformedbetweenGaussian
integersandregularintegers.Theclasswouldbeusedasfollows:
x=gaussInt(3,5)
y=gaussInt(7,1)
x*3+y*y
z=1
foriinrange(50):
z=x*z
printz
The
repr
methodinthisexamplemakestheobjectprintoutnicelywhenyou
typeitsnameoruseitina
print
statement.Tryleavingitout,andseewhat
happenswhenyoutypetheobject'sname,orperformanarithmeticoperation.
WehaveadditionandmultiplicationforourGaussianintegers,but
attemptstousesubtraction,negation,mod,exponentiationordivisionwillcause
anerrormessage,becausetheseoperationshavenotbeenEachofthese
operations,andmanymore,havetheirownreservedmethodnamesthatcanbe
Thereisnoneedtosticktousesoftheoperatorsymbolsthatresemble
theircustomaryuse.You'refreetoredeadditionasmultiplicationandmulti-
plicationasaddition,ifyouwant.Moreusefully,ifyouneedaspecialsymbolto
representmatrixmultiplication,youcanthemodoperature
%
tomeanma-
trixmultiplication,leaving
*
tomeanpointwisemultiplication.Or,ifyoumostly
usematrixmultiplication,youcan
*
tomeanmatrixmultiplicationand
%
to
meanpointwisemultiplication.
A
commutativeoperator
(say,"*")isoneforwhich
x

y
=
y

x
.Many
operations,mostcommonlymatrixmultiplication,arenon-commutative;oneneeds
tokeeptrackoftheorderofoperation.Allthebinaryoperatorscanbemade
non-commutativeinPython.IntheGaussianintegerexample,wedidn'tneedto
thinkmuchaboutwhichoperandin
x*y
was"self"andwhichonewas"other",
becausetheoperationbeingimplementediscommutative.Toimplementanon-
commutativeoperation,youonlyneedtopayattentiontowhichoperandis"self"
andwhichis"other".TheruleinPythonisthatinabinaryoperationsuchas
x*y
,theoperand(
x
)is"self"andthesecond(
y
)is"other".Asasimple
example,let'simplement"*"asstringconcatenation,whichisanon-commutative
operation.Forstrings,Pythonalreadyimplementsconcatenationasthemeaningof
theoperator
+
,sotheonlypointofthisexampleistointhemindthesomewhat
confusingmatterofwhichoperandis"self"andwhichis"other".Wethe
class
nonCommutative
:
classnonCommutative:
34
CHAPTER1.GETTINGSTARTED
def__init__(self,x):#xshouldbeastring
self.val=x
def__mul__(self,other):
returnnonCommutative(self.val+other.val)#Concatenatestrings
def__repr__(self):
returnself.val
Now,ifwecreatesomeinstances:
x=nonCommutative('a')
y=nonCommutative('b')
then
x*y
willevaluateto
ab
and
y*x
willevaluateto
ba
.Thus,toimplementa
noncommutativeoperation,youonlyneedtokeepinmindthat"self"istheoperand
ontheleftand"other"istheoperandontheright,inbinaryoperationslike
add
or
mul
.
Sincematrixmultiplicationisnon-commutative,youwouldneedtopayat-
tentiontothisifyouwantedtooverloadmultiplicationof
Numeric
arrayssothat
*
meantmatrixmultiplicationinsteadofpoint-by-pointmultiplication.Youdon't
needtopay
much
attention,though,sincethebasiclessonisthatifyoukeepthe
operandsinthe"natural"order,everythingwillworkoutThefollowingde-
anewclassofmatrices,forwhich
*
ismatrixmultiplicationand
%
ispointwise
multiplication:
classBetterArray:
def__init__(self,array):
self.array=array
def__mul__(self,other):
returnBetterArray(Numeric.matrixmultiply(self.array,other.array))
def__mod__(self,other):
returnBetterArray(self.array*other.array)
Thearrayhandedto
init
shouldbea
Numeric
array,thoughthisclassdoesn't
checktomakesurethatisthecase.Totrythisout,let'xmultiplythematrices
(1.1)
X
=

01
10

;Y
=

01

10

Tocreateandmultiplythesearrays,andprintouttheresult,typethefollowing:
importNumeric
1.4.ADVANCEDPYTHONTOPICS
35
X=BetterArray(Numeric.array([[0,1],[1,0]]))
Y=BetterArray(Numeric.array([[0,1],[-1,0]]))
Z=X*Y
printZ.array
Z1=Y*X
printZ1.array
Multiplyoutthearraysbyhandtomakesureourimplementationof
BetterArray
handlesthenon-commutativityproperly.Notethattogettheresultsintheabove
example,weneededtodothingslike
printZ.array
,becausewedidn'tgothrough
thebotherofwritinga
repr
methodfor
BetterArray
.Withoutthis,simply
typing
X*Y
performstheoperation,buttellsusnothingusefulabouttheresult.
Z.array
isa
Numeric
array,whichknowshowtoprintitself.
1
Asanexercise,completethenofthe
BetterArray
classby
addition,subtractionandnegation,andtryouttheobject.Youcanfurtherextend
theclassbyaddingsometype-checkingof
other
sothattheoperationscanhan-
dlethecaseofmultiplicationbyascalar.Ifyouarereallyambitious,youcould
evenmatrixdivision,byincorporatingamatrixinversionmethodforsquare
matrices.
Pythonalsoprovidesmethodsfor"right"versionsofthebinaryoperations,e.g.
rmul
and
radd
.If
y
hasan
rmul
methodand
x
hasno
mul
method,
then
x*y
translatesintoacalltothe
rmul
oftheobject
y
inwhich
y
is"self"and
x
is"other",i.e.
y.
rmul
(x)
.Itworkssimilarlyforotherbinaryoperations.As
we'vealreadyseen,youdonotneedtousethe"right"versionstomakeoperations
non-commutative.Sowhatarethe"right"versionsgoodfor?Our
gaussint
class
providesanexampleofacasewhereyouwouldneed
rmul
and
radd
.If
z
isa
gaussInt
then
z*3
returnsthecorrectanswerbecause
z
hasa
mul
methodand
thismethodchecksif
other
isanintegerandproceedsaccordingly.However,
3*z
raisesanerror,becausetheintegerhasnowayofknowinghowtomultiplyitselfby
a
gaussInt
.Thewayoutofthisproblemistogivethe
gaussInt
classan
rmul
method:
classgaussInt:
...#Samestuffasbeforehere
def__rmul__(self,other):
if(type(other)==type(1))or(type(other)==type(1L)):
returngaussInt(other*self.real,other*self.imag)
else:
1
Unfortunately,the
repr
methodof
Numeric
arraysisburiedinthecompiledlevelofthe
implementation,andcan'teasilybegottenat.
36
CHAPTER1.GETTINGSTARTED
returngaussInt(other.real*self.real-other.imag*self.imag,
other.imag*self.real+other.real*self.imag)
Now,
3*z
works,because
z
hasan
rmul
methodthatPythoncanuse.Notethat,
becausewewant
i*z
togivethesameresultas
z*i
,whereiisaninteger,wedidn't
reallyneedtocopythewholedeionof
mul
int
rmul
,aswedidabove.As
ashortcut,wecouldhavewrittensimply
classgaussInt:
...#Samestuffasbeforehere
def__rmul__(self,other):
returnself.__mul__(other)
Notethatweinvokethe
mul
methodas
self.
mul
(other)
not
as
self.
mul
(self,other)
.
Thatisbecausethespecial
self
argumentisonlyusedinPythonwhenweare

amethod,andneverwhenwearejust
invoking
(calling)it.Asanexercise,
extendthearithmeticof
gaussInt
furtherbyaddingan
radd
method.
Basically,the"right"versionsofthebinaryoperationsareneverneededif
youonlywanttooperationsbetweenobjectsofthesametype.Youonly
needthemtodealwithoperationsbetweenobjectsoftypes.Nowhere
comestheconfusingpart.Suppose
x
hasan
add
methodand
y
hasan
radd
method.Howis
x+y
interpreted?Isit
x.
add
(y)
or
y.
radd
(x)
?Theanswer
isthatPythonwillimplementtheoperationas
x.
add
(y)
.Thereisanimportant
exceptiontothisrule.Namely,certainverywell-constructedobjectswillgoonto
try
y.
radd
(x)
if
x.
add
(y)
createsanerror(andsimilarlyforotherbinary
operations).ThisishowPythonwasabletomakesenseof
3*z
,inour
gaussInt
example,eventhoughintegersalreadyhavea
mul
method,whichyou'dthink
wouldraiseanerror,sincetheydon'tknowhowtomultiplyanalgebraicintegerby
themselves.Thiskindoferrortrappingdoesn'thappenautomatically.Ithastobe
builtintotheobject.Integers,longintegers,ats,complexnumbers,strings,lists
and
Numeric
arraysareallwellconstructedobjectsinthissense.
Inthecaseoftheclass
BetterArray
,itisaconsiderablenuisancethatitis
necessarytoprovidensofalltheoperationsyouwanttheobjecttohandle,
evenifyoudon'tneedtochangetheirbehavior(asinthecaseofadditionand
subtraction).ObjectorientedlanguageslikePythonprovideapowerfulwayto
handlethisissue,intheformof
inheritance
.
2
Useofinheritancetobuilddaughter
2
Unfortunately,youcan'tactuallyuseinheritancewith
Numeric
arraysinthisway,sincethe
classesusedinthesearraysareimplementedinient,compiledcode.Theseobjectitions
arenotaccessibletothePythoninterpreter,andsomosttheirmethodscannotbeinheritedby
objectsedatthePythonlevel.
1.4.ADVANCEDPYTHONTOPICS
37
classesfromexistingoneswillnotbetreatedhere.Otheradvancedobjectconcepts
weareleavingoutinclude
introspection
and
polymorphism
.Theeagerstudentwho
wishestodigdeeperintoobjectorientedprogrammingcanexcellenttreatments
ofthesesubjectsinvirtuallyanycompletePythonprogramminghandbook.
1.4.2Dictionaries
1.4.3Writingtextdatatoes
Thedatawritingandreadingcapabilitiesprovidedbythe
Curve
objectwillprobably
takecareofalltheinput-outputneededtogetthroughthiscourse.Atsomepoint,
youmaybefacedwiththeneedforwritingorreadingofamoregeneralform.
Thissectionandthenextcoversthebasicsofhowthatisdone.
FirstyouneedtoopentheTodothis,youtype
myfile=open('test.out','w')
where
myfile
istheobjectbywhichyouwillrefertotheinyourPythonpro-
gram.Youcanuseanyvariablenameyouwantforthis.Similarly,youcanreplace
test.out
withwhateveryouwantthetobecalled.Thesecondargumentof
open
saysthatwewanttocreateanewifnecessary,andallowtheprogramto
writetoit.
Youcanonlywriteastringtoa,soyouhavetoconvertyourdatato
astring.Youhavealreadylearnedhowtodothis.Thefollowingexampleservesas
areminder,andalsoshowshowyoucanskiptoanewlineattheendofthestring.
a=1.
b=2.
outstring='%f%f\n'%(a,b)
outstring
Thedeionof
outstring
tellsPythontomakeastringconvertingtheelements
ofthetuplefromtstocharacters,withaspaceinbetweenandacarriagereturn
(newline)attheendoftheline.
FilesareobjectsinPython,sotowritethestringtotheyoujustdo
myfile.write(outstring)
.
Nowyouhaveeverythingyouneedtowritespace-delimiteddatatoaex-
ceptthatwhenyouaredone,youneedtoclosethebyexecuting
myfile.close()
.
38
CHAPTER1.GETTINGSTARTED
Usingwhatyouhavelearnedwriteatableofthefunctions
x=
(1+
x
)and
x
2
=
(1+
x
2
)vs.xtoaYoucantakealookattheresultinginanytext
editor,orloadtheintotheprogramofyourchoiceforplotting.
1.4.4Readingtextdatafroma
Toreadtextdatafromayouneedtoreadinalineoftext,andthenconvert
theitemsintonumbers,ifthatiswhattheyrepresent.Inordertodotheconver-
sion,itisnecessarytoknowwhatkindsofitemsareinthealthoughstrings
havevariousmethodsthatcanhelpyouidentifywhetheranitemisanumberor
not.Conversionisdonebystring-to-numberroutinesfoundinthemodule
string
.
Stringsrepresentingintegerscanbeconvertedtotnumbers,butifyoutryto
convertastringrepresentingaattoaninteger,youwillgetanerror.
Thefollowingexamplereadsasinglelinefroma,whichmayconsistof
integersorsseparatedbywhite-spacecharacters,andconvertsitintoalistof
values.Toreadtherestoftheyouwouldrepeattheprocedureuntiltheendof
theisreached.
importstring
f=open("myfile.txt")
buff=f.readline()
items=buff.split()#Or,doitallatoncewithitems=f.readline().split()
values=[string.atof(item)foriteminitems]
